= render 'shared/nav'

.d-flex.align-items-center.flex-column
  .alert.alert-danger.m-3.hidden#error

%form.d-flex.align-items-center.flex-column#sendTokenForm
  = label_tag :number, 'Mobile', class: 'd-block m-2'
  = text_field_tag :number, nil, type: 'tel', id: 'phone', class: 'form-control', required: true
  = text_field_tag :mobile, nil, class: 'hidden', id: 'mobile'
  = button_tag 'Send',class: 'btn btn-primary m-2', id: 'send'

%div.d-flex.align-items-center.flex-column.m-5.hidden#loading
  .spinner-border.text-primary{:role => "status"}
    %span.sr-only Loading...


%form.d-flex.align-items-center.flex-column.m-5.hidden#verifyTokenForm
  = label_tag :token, 'Token', class: 'd-block m-2'
  = text_field_tag :token, nil, type: 'number', id: 'token', class: 'form-control m-2', required: true
  = button_tag 'Verify',class: 'btn btn-primary m-2', id: 'verify'

%div.d-flex.align-items-center.flex-column.m-5.hidden#successAlert
  .alert.alert-success#success
  = link_to 'Open Post', post_path(@post), class: 'btn btn-primary m-2'

:javascript
  $('docuemnt').ready(function () {
    let phoneInput = document.getElementById('phone');
    window.intlTelInput(phoneInput, {
      utilsScript: "#{javascript_path('vendors/utils.js')}",
      separateDialCode: true,
      autoPlaceholder: 'aggressive',
      initialCountry: 'ae'
    });

    // mobile validator

    $("#phone").keyup(function (e) {
      let iti = window.intlTelInputGlobals.getInstance(phoneInput);
      if (iti.isValidNumber()) {
        phoneInput.setCustomValidity("");
        let number = iti.getNumber();
        $('#mobile').val(number)
      } else {
        phoneInput.setCustomValidity("Invalid telephone number.")
      }
    });

    // send token and get authy id

    $('#sendTokenForm').on('submit', function (e) {
      e.preventDefault();
      hide($('#sendTokenForm'));
      show($('#loading'));

      postRequest('/send_token', { mobile: $('#mobile').val()}, function (response) {
        hide($('#loading'));
        show($('#verifyTokenForm'));

        attachListenerToVerifyForm(response.authy_id)
      }, function (msg) {
        show($('#sendTokenForm'));
        hide($('#loading'));
        $('#error').text(msg.error);
        show($('#error'));
      })
    });

    // Attach submit listener to verify form and pass authy_id to it

    function attachListenerToVerifyForm (authyId) {
      $('#verifyTokenForm').on('submit', function (e) {
        e.preventDefault();
        $('#verify').text('Please Wait');
        $('#verify').attr('disabled','true');

        postRequest('/verify_token', { token: $('#token').val(), authy_id: authyId}, function (response) {
          publishPost();
        }, function (msg) {
          $('#verify').text('Verify');
          $('#verify').removeAttr('disabled');
          $('#error').text(msg.error);
          show($('#error'));
        })
      });
    }

    function publishPost () {
      patchRequest("/posts/#{@post.id}", {post: {state: 'published'}}, function (response) {
          hide($('#verifyTokenForm'));
          $('#success').text('your post has been published');
          show($('#successAlert'))
      }, function (msg) {
          $('#verify').text('Verify');
          $('#verify').removeAttr('disabled');
          $('#error').text(msg.error);
          show($('#error'));
      })
    }


    // request wrapper

    function postRequest(url, data, success, failed) {
      console.log(url, data, 'POST')
      var request = $.ajax({
        url: url,
        type: "POST",
        data: data
      });

      request.done(function (response, textStatus, jqXHR){
        success(response);
      });

      request.fail(function (response, textStatus, jqXHR){
        failed(response.responseJSON);
      });
    }

    function patchRequest(url, data, success, failed) {
      console.log(url, data, 'PATCH')
      var request = $.ajax({
        url: url,
        type: "PATCH",
        data: data
      });

      request.done(function (response, textStatus, jqXHR){
        success(response);
      });

      request.fail(function (response, textStatus, jqXHR){
        failed(response.responseJSON);
      });
    }

    // JQuery Dom Manipulator

    function show(element) {
      element.attr('style','display:flex !important');
    }

    function hide(element) {
      element.attr('style','display:none !important');
    }
  });
